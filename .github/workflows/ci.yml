name: CI

on:
  push:
  pull_request:

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '8.1'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer, php-cs-fixer
          coverage: none
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpstan:
     name: PHPStan
     runs-on: ubuntu-latest
     strategy:
       matrix:
         php:
           - '8.1'
       fail-fast: false
     env:
       APP_DEBUG: '1' # https://github.com/phpstan/phpstan-symfony/issues/37
     steps:
       - name: Checkout
         uses: actions/checkout@v3
       - name: Setup PHP
         uses: shivammathur/setup-php@v2
         with:
           php-version: ${{ matrix.php }}
           extensions: intl, bcmath, curl, openssl, mbstring
           ini-values: memory_limit=-1
           tools: pecl, composer, phpstan
           coverage: none
       - name: Get composer cache directory
         id: composercache
         run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
       - name: Cache dependencies
         uses: actions/cache@v3
         with:
           path: ${{ steps.composercache.outputs.dir }}
           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
           restore-keys: ${{ runner.os }}-composer-
       - name: Update project dependencies
         run: composer update --no-interaction --no-progress --ansi
       - name: Cache PHPStan results
         uses: actions/cache@v3
         with:
           path: /tmp/phpstan
           key: phpstan-php${{ matrix.php }}-${{ github.sha }}
           restore-keys: |
             phpstan-php${{ matrix.php }}-
             phpstan-
         continue-on-error: true
       - name: Run PHPStan analysis
         run: phpstan analyse --no-interaction --no-progress --no-interaction --ansi

  atoum:
    name: Atoum (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '8.1'
      fail-fast: false
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      - name: Run tests
        run: ./bin/atoum

  behat:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        php:
          - '8.1'
      fail-fast: false
    env:
      DISPLAY: ':99'
    #      SELENIUM_VERSION: '3.12.0'
    steps:
      - uses: actions/checkout@v3
      - uses: nanasess/setup-chromedriver@v1
      #      - name: Fix Java version # Use JDK8 due to https://github.com/SeleniumHQ/selenium/issues/4964
      #        run: |
      #          sudo apt-get install openjdk-8-jre
      #          sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
      - name: Setup
        run: |
          export DISPLAY=:99
          chromedriver --log-path=./chromedriver.log --log-level=ALL --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
      #      - name: Setup (from Behatch)
      #        run: Xvfb $DISPLAY -extension RANDR &> /dev/null &
      #      - name: Setup (from Behatch)
      #        run: |
      #          LATEST_CHROMEDRIVER_VERSION=`curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE`
      #          wget --no-verbose https://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER_VERSION/chromedriver_linux64.zip
      #          unzip chromedriver_linux64.zip -d ~/bin
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi
      #      - name: Cache Selenium
      #        uses: actions/cache@v3
      #        with:
      #          path: bin/selenium.jar
      #          key: ${{ runner.os }}-selenium-${{ env.SELENIUM_VERSION }}
      #          restore-keys: ${{ runner.os }}-selenium-
      #      - name: Run selenium
      #        run: |
      #          [ ! -f bin/selenium.jar ] && wget "https://selenium-release.storage.googleapis.com/${SELENIUM_VERSION%%.[[:digit:]]}/selenium-server-standalone-${SELENIUM_VERSION}.jar" -O bin/selenium.jar
      #          java -jar bin/selenium.jar &> ./selenium.log &n selenium
      - name: Run selenium
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8_X64 }}
          PATH: ${{ env.JAVA_HOME_8_X64 }}/bin:${{ env.PATH }}
        run: |
          java -jar $SELENIUM_JAR_PATH standalone &
      - name: Info
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8_X64 }}
          PATH: ${{ env.JAVA_HOME_8_X64 }}/bin:${{ env.PATH }}
        run: |
          whereis snap
          whereis java
          java -version
          chromium --version
          chromedriver --version
          google-chrome --version
          curl localhost:4444 -I
      - name: Run php fixtures server
        run: php -S localhost:8080 -t tests/fixtures/www &> ./fixtures.log &
      - name: Run behat tests (default)
        run: ./bin/behat -fprogress --tags="~@user" --no-interaction --profile=default
      - name: Run behat tests (symfony 2)
        run: ./bin/behat -fprogress --tags="~@user" --no-interaction --profile=symfony2
      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: '*.log'
